{% extends "layout.twig" %}

{% block title %}Edit Harvest Source{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">Edit Harvest Source</h1>

    <div class="bg-white rounded-lg shadow-md p-6">
        <form action="/oai/harvest/{{ source.id }}/layers" method="POST" class="space-y-4">
            <div>
                <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
                <input type="text" name="name" id="name" value="{{ source.name }}" required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
            </div>
            <div>
                <label for="url" class="block text-sm font-medium text-gray-700">Base URL</label>
                <input type="url" name="url" id="url" value="{{ source.url }}" required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
            </div>
            <div>
                <label for="set" class="block text-sm font-medium text-gray-700">Set Spec (optional)</label>
                <input type="text" name="set" id="set" value="{{ source.set }}"
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
            </div>
            <div>
                <label for="schedule" class="block text-sm font-medium text-gray-700">Harvest Schedule</label>
                <select name="schedule" id="schedule" required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    <option value="daily" {% if source.schedule == 'daily' %}selected{% endif %}>Daily</option>
                    <option value="weekly" {% if source.schedule == 'weekly' %}selected{% endif %}>Weekly</option>
                    <option value="monthly" {% if source.schedule == 'monthly' %}selected{% endif %}>Monthly</option>
                </select>
            </div>

            <!-- Layer Selection Section -->
            <div class="mt-6">
                <h3 class="text-lg font-medium text-gray-900 mb-4">Selected Layers</h3>
                <div id="layer-selection" class="space-y-4">
                    <div class="flex items-center space-x-4">
                        <button type="button" id="load-layers" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Load Available Layers
                        </button>
                        <span id="layer-loading" class="hidden">
                            <svg class="animate-spin h-5 w-5 text-indigo-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </span>
                    </div>
                    <div id="layers-container" class="hidden">
                        <div class="bg-gray-50 p-4 rounded-md">
                            <div class="flex items-center justify-between mb-2">
                                <h4 class="text-sm font-medium text-gray-700">Available Layers</h4>
                                <div class="flex items-center space-x-2">
                                    <button type="button" id="select-all" class="text-sm text-indigo-600 hover:text-indigo-900">Select All</button>
                                    <button type="button" id="deselect-all" class="text-sm text-indigo-600 hover:text-indigo-900">Deselect All</button>
                                </div>
                            </div>
                            <div id="layers-list" class="space-y-2 max-h-60 overflow-y-auto">
                                <!-- Layers will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="flex justify-end space-x-4">
                <a href="/oai/harvest"
                    class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Cancel
                </a>
                <button type="submit"
                    class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Save Changes
                </button>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const loadLayersBtn = document.getElementById('load-layers');
    const layerLoading = document.getElementById('layer-loading');
    const layersContainer = document.getElementById('layers-container');
    const layersList = document.getElementById('layers-list');
    const selectAllBtn = document.getElementById('select-all');
    const deselectAllBtn = document.getElementById('deselect-all');
    const urlInput = document.getElementById('url');
    const selectedLayers = {{ source.selected_layers|json_encode|raw }};

    loadLayersBtn.addEventListener('click', async function() {
        const url = urlInput.value;
        if (!url) {
            alert('Please enter a valid WMS URL');
            return;
        }

        layerLoading.classList.remove('hidden');
        loadLayersBtn.disabled = true;

        try {
            const response = await fetch('/api/wms-layers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ url: url })
            });

            const data = await response.json();
            
            if (data.error) {
                throw new Error(data.error);
            }

            // Clear existing layers
            layersList.innerHTML = '';

            // Add layers to the list
            data.layers.forEach(layer => {
                const div = document.createElement('div');
                div.className = 'flex items-center space-x-2';
                
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.name = 'layers[]';
                checkbox.value = layer.name;
                checkbox.className = 'h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded';
                
                // Check if this layer was previously selected
                if (selectedLayers.includes(layer.name)) {
                    checkbox.checked = true;
                }

                const label = document.createElement('label');
                label.className = 'text-sm text-gray-700';
                label.textContent = layer.title || layer.name;

                div.appendChild(checkbox);
                div.appendChild(label);
                layersList.appendChild(div);
            });

            layersContainer.classList.remove('hidden');
        } catch (error) {
            alert('Error loading layers: ' + error.message);
        } finally {
            layerLoading.classList.add('hidden');
            loadLayersBtn.disabled = false;
        }
    });

    selectAllBtn.addEventListener('click', function() {
        const checkboxes = layersList.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach(checkbox => checkbox.checked = true);
    });

    deselectAllBtn.addEventListener('click', function() {
        const checkboxes = layersList.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach(checkbox => checkbox.checked = false);
    });
});
</script>
{% endblock %} 