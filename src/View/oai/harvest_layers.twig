{% extends "layout.twig" %}

{% block title %}Select WMS Layers to Import{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-8">
    <div class="bg-white rounded-lg shadow-lg p-6">
        <h1 class="text-2xl font-bold mb-6">Select WMS Layers to Import</h1>
        
        <div class="mb-6">
            <h2 class="text-lg font-semibold mb-2">Harvest Schedule</h2>
            <div class="flex space-x-4">
                <label class="inline-flex items-center">
                    <input type="radio" name="schedule" value="daily" class="form-radio" 
                           {% if source.schedule == 'daily' %}checked{% endif %}>
                    <span class="ml-2">Daily</span>
                </label>
                <label class="inline-flex items-center">
                    <input type="radio" name="schedule" value="weekly" class="form-radio"
                           {% if source.schedule == 'weekly' %}checked{% endif %}>
                    <span class="ml-2">Weekly</span>
                </label>
                <label class="inline-flex items-center">
                    <input type="radio" name="schedule" value="monthly" class="form-radio"
                           {% if source.schedule == 'monthly' %}checked{% endif %}>
                    <span class="ml-2">Monthly</span>
                </label>
            </div>
        </div>

        <div class="mb-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-lg font-semibold">Available Layers</h2>
                <div class="space-x-2">
                    <button type="button" onclick="selectAll()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                        Select All
                    </button>
                    <button type="button" onclick="selectNone()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                        Select None
                    </button>
                </div>
            </div>
            
            <form id="save-layers-form" method="POST" action="/oai/harvest/{{ source.id }}/layers">
                <input type="hidden" name="schedule" id="schedule-input" value="{{ source.schedule }}">
                <div id="layers-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    <!-- Layers will be loaded here -->
                </div>
                <div class="mt-6 flex justify-between">
                    <a href="/oai/harvest" class="bg-gray-500 text-white px-6 py-2 rounded hover:bg-gray-600">
                        Back to Harvest
                    </a>
                    <button type="submit" class="bg-green-500 text-white px-6 py-2 rounded hover:bg-green-600">
                        Save Layer Settings
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

{% if source.selected_layers|length > 0 %}
<div class="mt-4 flex justify-end">
    <form action="/oai/harvest/{{ source.id }}/run" method="POST" style="display:inline">
        <button type="submit" class="inline-flex items-center bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">
            <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            Run Harvest Now
        </button>
    </form>
</div>
{% endif %}

<script>
let layers = [];
let selectedLayers = new Set({{ source.selected_layers|json_encode|raw }});

function loadLayers() {
    fetch('/api/wms-layers', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            url: '{{ source.url }}'
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            console.error('Error loading layers:', data.error);
            return;
        }
        layers = data.layers;
        renderLayers();
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

function renderLayers() {
    const container = document.getElementById('layers-container');
    container.innerHTML = '';
    
    layers.forEach(layer => {
        const div = document.createElement('div');
        div.className = 'flex items-center space-x-2 p-2 border rounded';
        
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.name = 'layers[]';
        checkbox.value = layer.name;
        checkbox.checked = selectedLayers.has(layer.name);
        checkbox.className = 'form-checkbox h-5 w-5 text-blue-600';
        checkbox.onchange = () => {
            if (checkbox.checked) {
                selectedLayers.add(layer.name);
            } else {
                selectedLayers.delete(layer.name);
            }
        };
        
        const label = document.createElement('label');
        label.className = 'flex-1';
        label.textContent = layer.title || layer.name;
        
        div.appendChild(checkbox);
        div.appendChild(label);
        container.appendChild(div);
    });
}

function selectAll() {
    document.querySelectorAll('input[name="layers[]"]').forEach(checkbox => {
        checkbox.checked = true;
        selectedLayers.add(checkbox.value);
    });
}

function selectNone() {
    document.querySelectorAll('input[name="layers[]"]').forEach(checkbox => {
        checkbox.checked = false;
        selectedLayers.delete(checkbox.value);
    });
}

// Update schedule input when radio buttons change
document.querySelectorAll('input[name="schedule"]').forEach(radio => {
    radio.addEventListener('change', (e) => {
        document.getElementById('schedule-input').value = e.target.value;
    });
});

// Load layers when the page loads
document.addEventListener('DOMContentLoaded', loadLayers);
</script>
{% endblock %} 