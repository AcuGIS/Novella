{% extends "layout/base.twig" %}

{% block title %}GIS Data Viewer{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@v7.4.0/ol.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .viewer-container {
            display: flex;
            height: calc(100vh - 60px);
        }
        
        .datasets-sidebar {
            width: 300px;
            background: #f5f5f5;
            padding: 15px;
            border-right: 1px solid #ddd;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
        }

        .search-container {
            margin-bottom: 15px;
            position: sticky;
            top: 0;
            background: #f5f5f5;
            padding: 10px 0;
            z-index: 10;
        }

        .search-input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .datasets-list {
            flex-grow: 1;
            overflow-y: auto;
        }
        
        .dataset-item {
            padding: 10px;
            margin-bottom: 8px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: move;
        }
        
        .dataset-item:hover {
            background: #f0f0f0;
        }

        .dataset-title {
            font-weight: 500;
            margin-bottom: 4px;
        }

        .dataset-description {
            font-size: 12px;
            color: #666;
            margin-bottom: 4px;
        }

        .dataset-topics {
            display: flex;
            flex-wrap: wrap;
            gap: 4px;
        }

        .dataset-topic {
            font-size: 11px;
            padding: 2px 6px;
            background: #e9ecef;
            border-radius: 12px;
            color: #495057;
        }

        .pagination-container {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .pagination-info {
            font-size: 12px;
            color: #666;
        }

        .pagination-buttons {
            display: flex;
            gap: 8px;
        }

        .pagination-button {
            padding: 4px 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background: white;
            cursor: pointer;
            font-size: 12px;
        }

        .pagination-button:disabled {
            background: #f5f5f5;
            cursor: not-allowed;
            color: #999;
        }

        .pagination-button.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }
        
        .map-container {
            flex-grow: 1;
            position: relative;
        }
        
        #map {
            width: 100%;
            height: 100%;
        }
        
        .export-button {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1000;
            background: white;
            padding: 8px 12px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 14px;
            color: #333;
            border: 1px solid #ddd;
        }
        
        .export-button:hover {
            background: #f5f5f5;
        }
        
        .export-button i {
            font-size: 16px;
        }
    </style>
{% endblock %}

{% block content %}
    <div class="viewer-container">
        <div class="datasets-sidebar">
            <div class="search-container">
                <input type="text" id="dataset-search" class="search-input" placeholder="Search datasets...">
            </div>
            <div class="datasets-list" id="datasets-list">
                {% for dataset in datasets %}
                    <div class="dataset-item" draggable="true" data-dataset-id="{{ dataset.id }}">
                        <div class="dataset-title">{{ dataset.title }}</div>
                        {% if dataset.description %}
                            <div class="dataset-description">{{ dataset.description|slice(0, 100) }}{% if dataset.description|length > 100 %}...{% endif %}</div>
                        {% endif %}
                        {% if dataset.topics %}
                            <div class="dataset-topics">
                                {% for topic in dataset.topics %}
                                    <span class="dataset-topic">{{ topic.name }}</span>
                                {% endfor %}
                            </div>
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
            <div class="pagination-container">
                <div class="pagination-info">
                    Showing {{ (currentPage - 1) * limit + 1 }} to {{ min(currentPage * limit, totalItems) }} of {{ totalItems }} datasets
                </div>
                <div class="pagination-buttons">
                    <button class="pagination-button" id="prev-page" {% if currentPage == 1 %}disabled{% endif %}>
                        Previous
                    </button>
                    {% for i in range(1, totalPages) %}
                        <button class="pagination-button {% if i == currentPage %}active{% endif %}" 
                                data-page="{{ i }}" 
                                {% if i == currentPage %}disabled{% endif %}>
                            {{ i }}
                        </button>
                    {% endfor %}
                    <button class="pagination-button" id="next-page" {% if currentPage == totalPages %}disabled{% endif %}>
                        Next
                    </button>
                </div>
            </div>
        </div>
        <div class="map-container">
            <button id="export-pdf" class="export-button">
                <i class="fas fa-file-pdf"></i> Export to PDF
            </button>
            <div id="map"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/ol@v7.4.0/dist/ol.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize OpenLayers map
            const map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.OSM()
                    })
                ],
                view: new ol.View({
                    center: ol.proj.fromLonLat([0, 0]),
                    zoom: 2
                })
            });

            // Search functionality
            const searchInput = document.getElementById('dataset-search');
            let searchTimeout;

            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    const searchTerm = this.value.trim();
                    window.location.href = `/viewer?search=${encodeURIComponent(searchTerm)}&page=1`;
                }, 300);
            });

            // Pagination functionality
            const paginationButtons = document.querySelectorAll('.pagination-button[data-page]');
            paginationButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const page = this.dataset.page;
                    const searchTerm = new URLSearchParams(window.location.search).get('search') || '';
                    window.location.href = `/viewer?page=${page}&search=${encodeURIComponent(searchTerm)}`;
                });
            });

            document.getElementById('prev-page').addEventListener('click', function() {
                const currentPage = {{ currentPage }};
                if (currentPage > 1) {
                    const searchTerm = new URLSearchParams(window.location.search).get('search') || '';
                    window.location.href = `/viewer?page=${currentPage - 1}&search=${encodeURIComponent(searchTerm)}`;
                }
            });

            document.getElementById('next-page').addEventListener('click', function() {
                const currentPage = {{ currentPage }};
                const totalPages = {{ totalPages }};
                if (currentPage < totalPages) {
                    const searchTerm = new URLSearchParams(window.location.search).get('search') || '';
                    window.location.href = `/viewer?page=${currentPage + 1}&search=${encodeURIComponent(searchTerm)}`;
                }
            });

            // Drag and drop functionality
            const datasetItems = document.querySelectorAll('.dataset-item');
            datasetItems.forEach(item => {
                item.addEventListener('dragstart', function(e) {
                    e.dataTransfer.setData('text/plain', this.dataset.datasetId);
                });
            });

            const mapElement = document.getElementById('map');
            mapElement.addEventListener('dragover', function(e) {
                e.preventDefault();
            });

            mapElement.addEventListener('drop', function(e) {
                e.preventDefault();
                const datasetId = e.dataTransfer.getData('text/plain');
                loadDatasetLayer(datasetId);
            });

            function loadDatasetLayer(datasetId) {
                fetch(`/viewer/dataset/${datasetId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            console.error('Error loading dataset:', data.error);
                            return;
                        }

                        const features = new ol.format.GeoJSON().readFeatures(data);
                        const vectorSource = new ol.source.Vector({
                            features: features
                        });

                        const vectorLayer = new ol.layer.Vector({
                            source: vectorSource,
                            style: new ol.style.Style({
                                stroke: new ol.style.Stroke({
                                    color: 'rgba(0, 0, 255, 1.0)',
                                    width: 2
                                }),
                                fill: new ol.style.Fill({
                                    color: 'rgba(0, 0, 255, 0.1)'
                                })
                            })
                        });

                        map.addLayer(vectorLayer);
                        map.getView().fit(vectorSource.getExtent(), {
                            padding: [50, 50, 50, 50],
                            maxZoom: 15
                        });
                    })
                    .catch(error => {
                        console.error('Error loading dataset:', error);
                    });
            }

            // Add PDF export functionality
            document.getElementById('export-pdf').addEventListener('click', async function() {
                const button = this;
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Exporting...';
                
                try {
                    const mapElement = document.getElementById('map');
                    const canvas = await html2canvas(mapElement, {
                        useCORS: true,
                        allowTaint: true,
                        backgroundColor: null
                    });
                    
                    const { jsPDF } = window.jspdf;
                    const pdf = new jsPDF({
                        orientation: 'landscape',
                        unit: 'mm',
                        format: 'a4'
                    });
                    
                    const imgData = canvas.toDataURL('image/png');
                    const pdfWidth = pdf.internal.pageSize.getWidth();
                    const pdfHeight = pdf.internal.pageSize.getHeight();
                    const imgWidth = canvas.width;
                    const imgHeight = canvas.height;
                    const ratio = Math.min(pdfWidth / imgWidth, pdfHeight / imgHeight);
                    const imgX = (pdfWidth - imgWidth * ratio) / 2;
                    const imgY = 20;
                    
                    pdf.addImage(imgData, 'PNG', imgX, imgY, imgWidth * ratio, imgHeight * ratio);
                    
                    // Add metadata
                    const view = map.getView();
                    const center = view.getCenter();
                    const zoom = view.getZoom();
                    const extent = view.calculateExtent(map.getSize());
                    
                    pdf.setFontSize(10);
                    pdf.text(`Center: ${ol.proj.transform(center, 'EPSG:3857', 'EPSG:4326').map(coord => coord.toFixed(4)).join(', ')}`, 20, pdfHeight - 40);
                    pdf.text(`Zoom: ${zoom.toFixed(2)}`, 20, pdfHeight - 30);
                    pdf.text(`Extent: ${extent.map(coord => coord.toFixed(2)).join(', ')}`, 20, pdfHeight - 20);
                    
                    pdf.save('map-export.pdf');
                } catch (error) {
                    console.error('Error exporting PDF:', error);
                } finally {
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-file-pdf"></i> Export to PDF';
                }
            });
        });
    </script>
{% endblock %} 