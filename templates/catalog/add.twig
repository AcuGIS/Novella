{% extends "layout/base.twig" %}

{% block title %}Add GIS Data - GIS Catalog{% endblock %}

{% block styles %}
    <!-- OpenLayers CSS -->
    <link rel="stylesheet" href="https://unpkg.com/ol@7.4.0/ol.css">
    <style>
        /* Debug styles */
        .debug-border {
            border: 3px solid red !important;
            padding: 10px !important;
            margin: 10px 0 !important;
        }
        .metadata-section {
            background-color: #f9fafb;
            padding: 1.5rem;
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid #e5e7eb;
        }
        
        /* Ensure spatial extent section is visible */
        #map {
            width: 100%;
            height: 400px;
            border: 2px solid #2563eb;
            margin-bottom: 10px;
            background-color: #f3f4f6;
        }
        
        /* Make sure the grid is visible */
        .grid {
            display: grid !important;
            grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
            gap: 1rem !important;
            margin-top: 1rem !important;
            border: 1px solid #e5e7eb;
            padding: 1rem;
            background-color: white;
        }
        
        /* Ensure form inputs are visible */
        .form-input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #2563eb;
            border-radius: 0.25rem;
            background-color: white;
        }
        
        /* Rest of your existing styles */
        .form-group {
            margin-bottom: 1rem;
        }
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #1f2937;
        }
        .form-textarea {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 0.25rem;
            min-height: 100px;
        }
        .form-select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 0.25rem;
        }
        .form-checkbox {
            margin-right: 0.5rem;
        }
        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    </style>
{% endblock %}

{% block content %}
<!-- DEBUG START -->
<div class="debug-border">
    <h3>Debug Information</h3>
    <p>Template: catalog/add.twig</p>
    <p>Time: {{ "now"|date("Y-m-d H:i:s") }}</p>
</div>
<!-- DEBUG END -->

<div class="container mx-auto px-4 py-8">
    <div class="mb-8">
        <a href="/catalog" class="text-blue-600 hover:text-blue-900">&larr; Back to Catalog</a>
    </div>

    <div class="bg-white rounded-lg shadow-md p-6">
        <h1 class="text-3xl font-bold mb-6">Add GIS Data</h1>

        <form action="/catalog/add" method="POST" enctype="multipart/form-data" class="space-y-6">
            <!-- Basic Information -->
            <div class="metadata-section debug-border">
                <h2 class="text-xl font-semibold mb-4">Basic Information</h2>
                
                <div class="form-group">
                    <label for="title" class="form-label">Title *</label>
                    <input type="text" id="title" name="title" required
                        class="form-input">
                    {% if errors.title %}
                        <div class="error-message">{{ errors.title }}</div>
                    {% endif %}
                </div>

                <div class="form-group">
                    <label for="description" class="form-label">Description</label>
                    <textarea id="description" name="description"
                        class="form-textarea"></textarea>
                    {% if errors.description %}
                        <div class="error-message">{{ errors.description }}</div>
                    {% endif %}
                </div>

                <div class="form-group">
                    <label for="abstract" class="form-label">Abstract</label>
                    <textarea id="abstract" name="abstract"
                        class="form-textarea"></textarea>
                </div>

                <div class="form-group">
                    <label for="purpose" class="form-label">Purpose</label>
                    <textarea id="purpose" name="purpose"
                        class="form-textarea"></textarea>
                </div>
            </div>

            <!-- Import from URL -->
            <div class="metadata-section debug-border">
                <h2 class="text-xl font-semibold mb-4">Import from URL</h2>
                <div class="form-group">
                    <label for="gis_data_url" class="form-label">GIS Data URL</label>
                    <div class="flex gap-2">
                        <input type="url" id="gis_data_url" name="gis_data_url" 
                            class="form-input flex-grow" 
                            placeholder="Enter URL to GIS data (GeoJSON, WMS, WFS, etc.)">
                        <button type="button" id="fetchMetadataBtn" 
                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                            Fetch Metadata
                        </button>
                    </div>
                    <div id="urlStatus" class="mt-2 text-sm"></div>
                </div>
            </div>

            <!-- Spatial Information -->
            <div class="metadata-section debug-border">
                <h2 class="text-xl font-semibold mb-4">Spatial Information</h2>
                
                <div class="form-group debug-border">
                    <label class="form-label">Spatial Extent</label>
                    <div id="map" class="debug-border"></div>
                    <div class="grid grid-cols-2 gap-4 mt-4 debug-border">
                        <div>
                            <label for="westBound" class="form-label">West Bound Longitude</label>
                            <input type="number" id="westBound" name="metadata[spatial_extent][coordinates][0][0][0]" step="any"
                                class="form-input">
                        </div>
                        <div>
                            <label for="eastBound" class="form-label">East Bound Longitude</label>
                            <input type="number" id="eastBound" name="metadata[spatial_extent][coordinates][0][2][0]" step="any"
                                class="form-input">
                        </div>
                        <div>
                            <label for="southBound" class="form-label">South Bound Latitude</label>
                            <input type="number" id="southBound" name="metadata[spatial_extent][coordinates][0][0][1]" step="any"
                                class="form-input">
                        </div>
                        <div>
                            <label for="northBound" class="form-label">North Bound Latitude</label>
                            <input type="number" id="northBound" name="metadata[spatial_extent][coordinates][0][2][1]" step="any"
                                class="form-input">
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="crs" class="form-label">Coordinate Reference System</label>
                    <input type="text" id="crs" name="crs"
                        class="form-input" value="EPSG:4326"
                        placeholder="e.g., EPSG:4326">
                </div>

                <div class="form-group">
                    <label for="crsType" class="form-label">CRS Type</label>
                    <select id="crsType" name="crsType" class="form-select">
                        <option value="geographic">Geographic</option>
                        <option value="projected">Projected</option>
                        <option value="vertical">Vertical</option>
                    </select>
                </div>
            </div>

            <!-- Temporal Information -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Temporal Information</h2>
                
                <div class="form-group">
                    <label for="temporalStart" class="form-label">Start Date</label>
                    <input type="datetime-local" id="temporalStart" name="temporalStart"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="temporalEnd" class="form-label">End Date</label>
                    <input type="datetime-local" id="temporalEnd" name="temporalEnd"
                        class="form-input">
                </div>
            </div>

            <!-- Responsible Parties -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Responsible Parties</h2>
                
                <div class="form-group">
                    <label for="pointOfContactName" class="form-label">Point of Contact Name</label>
                    <input type="text" id="pointOfContactName" name="pointOfContactName"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="pointOfContactOrg" class="form-label">Point of Contact Organization</label>
                    <input type="text" id="pointOfContactOrg" name="pointOfContactOrg"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="pointOfContactEmail" class="form-label">Point of Contact Email</label>
                    <input type="email" id="pointOfContactEmail" name="pointOfContactEmail"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="publisherName" class="form-label">Publisher Name</label>
                    <input type="text" id="publisherName" name="publisherName"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="publisherOrg" class="form-label">Publisher Organization</label>
                    <input type="text" id="publisherOrg" name="publisherOrg"
                        class="form-input">
                </div>
            </div>

            <!-- Data Quality -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Data Quality</h2>
                
                <div class="form-group">
                    <label for="lineageStatement" class="form-label">Lineage Statement</label>
                    <textarea id="lineageStatement" name="lineageStatement"
                        class="form-textarea"></textarea>
                </div>

                <div class="form-group">
                    <label for="conformityStandard" class="form-label">Conformity Standard</label>
                    <input type="text" id="conformityStandard" name="conformityStandard"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="conformityDegree" class="form-label">Conformity Degree</label>
                    <select id="conformityDegree" name="conformityDegree" class="form-select">
                        <option value="conformant">Conformant</option>
                        <option value="notConformant">Not Conformant</option>
                        <option value="notEvaluated">Not Evaluated</option>
                    </select>
                </div>
            </div>

            <!-- Access and Use Constraints -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Access and Use Constraints</h2>
                
                <div class="form-group">
                    <label for="useConstraints" class="form-label">Use Constraints</label>
                    <textarea id="useConstraints" name="useConstraints"
                        class="form-textarea"></textarea>
                </div>

                <div class="form-group">
                    <label for="accessConstraints" class="form-label">Access Constraints</label>
                    <textarea id="accessConstraints" name="accessConstraints"
                        class="form-textarea"></textarea>
                </div>

                <div class="form-group">
                    <label for="license" class="form-label">License</label>
                    <input type="text" id="license" name="license"
                        class="form-input">
                </div>
            </div>

            <!-- Distribution -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Distribution</h2>
                
                <div class="form-group">
                    <label for="distributionUrl" class="form-label">Distribution URL</label>
                    <input type="url" id="distributionUrl" name="distributionUrl"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="distributionFormat" class="form-label">Distribution Format</label>
                    <input type="text" id="distributionFormat" name="distributionFormat"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="distributorName" class="form-label">Distributor Name</label>
                    <input type="text" id="distributorName" name="distributorName"
                        class="form-input">
                </div>

                <div class="form-group">
                    <label for="distributorOrg" class="form-label">Distributor Organization</label>
                    <input type="text" id="distributorOrg" name="distributorOrg"
                        class="form-input">
                </div>
            </div>

            <!-- Maintenance -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Maintenance</h2>
                
                <div class="form-group">
                    <label for="updateFrequency" class="form-label">Update Frequency</label>
                    <select id="updateFrequency" name="updateFrequency" class="form-select">
                        <option value="continual">Continual</option>
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="fortnightly">Fortnightly</option>
                        <option value="monthly">Monthly</option>
                        <option value="quarterly">Quarterly</option>
                        <option value="biannually">Biannually</option>
                        <option value="annually">Annually</option>
                        <option value="asNeeded">As Needed</option>
                        <option value="irregular">Irregular</option>
                        <option value="notPlanned">Not Planned</option>
                        <option value="unknown">Unknown</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="maintenanceNotes" class="form-label">Maintenance Notes</label>
                    <textarea id="maintenanceNotes" name="maintenanceNotes"
                        class="form-textarea"></textarea>
                </div>
            </div>

            <!-- File Upload -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">File Information</h2>
                
                <div class="form-group">
                    <label for="file" class="form-label">GIS File</label>
                    <input type="file" id="file" name="file" accept=".shp,.geojson,.kml,.gml"
                        class="form-input">
                    {% if errors.file %}
                        <div class="error-message">{{ errors.file }}</div>
                    {% endif %}
                </div>
            </div>

            <!-- Additional Settings -->
            <div class="metadata-section">
                <h2 class="text-xl font-semibold mb-4">Additional Settings</h2>
                
                <div class="form-group">
                    <label class="form-label">Visibility</label>
                    <div class="flex items-center">
                        <input type="hidden" name="is_public" value="0">
                        <input type="checkbox" id="is_public" name="is_public" value="1"
                            class="form-checkbox">
                        <label for="is_public">Make this dataset public</label>
                    </div>
                </div>

                <div class="form-group">
                    <label for="status" class="form-label">Status</label>
                    <select id="status" name="status" class="form-select">
                        <option value="draft">Draft</option>
                        <option value="published">Published</option>
                        <option value="archived">Archived</option>
                    </select>
                </div>
            </div>

            <div class="flex justify-end space-x-4">
                <a href="/catalog" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">
                    Cancel
                </a>
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                    Add Dataset
                </button>
            </div>
        </form>
    </div>
</div>

<script src="https://unpkg.com/ol@7.4.0/dist/ol.js"></script>
<script>
// Add debug logging
console.log('Template loaded - checking for elements:');
['westBound', 'eastBound', 'southBound', 'northBound', 'map'].forEach(id => {
    const element = document.getElementById(id);
    console.log(`${id}: ${element ? 'Found' : 'Not found'}`);
});

document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM Content Loaded - Starting initialization');
    
    // Initialize map
    console.log('Initializing map...');
    const map = new ol.Map({
        target: 'map',
        layers: [
            new ol.layer.Tile({
                source: new ol.source.OSM()
            })
        ],
        view: new ol.View({
            center: ol.proj.fromLonLat([0, 0]),
            zoom: 2
        })
    });
    console.log('Map initialized');

    // Add extent box
    console.log('Setting up extent box...');
    let extentBox = null;
    const extentSource = new ol.source.Vector();
    const extentLayer = new ol.layer.Vector({
        source: extentSource,
        style: new ol.style.Style({
            stroke: new ol.style.Stroke({
                color: 'rgba(0, 0, 255, 1.0)',
                width: 2
            }),
            fill: new ol.style.Fill({
                color: 'rgba(0, 0, 255, 0.1)'
            })
        })
    });
    map.addLayer(extentLayer);
    console.log('Extent layer added to map');

    // Function to update extent box
    function updateExtentBox() {
        console.log('Updating extent box...');
        const west = parseFloat(document.getElementById('westBound').value);
        const east = parseFloat(document.getElementById('eastBound').value);
        const south = parseFloat(document.getElementById('southBound').value);
        const north = parseFloat(document.getElementById('northBound').value);

        console.log('Current extent values:', { west, east, south, north });

        if (isNaN(west) || isNaN(east) || isNaN(south) || isNaN(north)) {
            console.log('Invalid extent values, skipping update');
            return;
        }

        const extent = ol.proj.transformExtent(
            [west, south, east, north],
            'EPSG:4326',
            'EPSG:3857'
        );

        if (extentBox) {
            extentSource.removeFeature(extentBox);
        }

        extentBox = new ol.Feature({
            geometry: new ol.geom.Polygon.fromExtent(extent)
        });
        extentSource.addFeature(extentBox);
        map.getView().fit(extent, { padding: [50, 50, 50, 50] });
        console.log('Extent box updated');
    }

    // Add event listeners to extent inputs
    console.log('Adding event listeners to extent inputs...');
    ['westBound', 'eastBound', 'southBound', 'northBound'].forEach(id => {
        const element = document.getElementById(id);
        if (element) {
            console.log(`Found element for ${id}`);
            element.addEventListener('change', updateExtentBox);
        } else {
            console.error(`Could not find element with id ${id}`);
        }
    });

    // Handle fetch metadata button click
    console.log('Setting up fetch metadata button...');
    const fetchMetadataBtn = document.getElementById('fetchMetadataBtn');
    if (fetchMetadataBtn) {
        console.log('Found fetch metadata button');
        fetchMetadataBtn.addEventListener('click', async function(e) {
            console.log('Fetch metadata button clicked');
            e.preventDefault();
            const urlInput = document.getElementById('gis_data_url');
            const urlStatus = document.getElementById('urlStatus');
            const url = urlInput.value.trim();

            console.log('URL input value:', url);

            if (!url) {
                urlStatus.innerHTML = '<span class="text-red-600">Please enter a URL</span>';
                return;
            }

            urlStatus.innerHTML = '<span class="text-blue-600">Fetching metadata...</span>';

            try {
                console.log('Sending request to /catalog/fetch-metadata');
                const response = await fetch('/catalog/fetch-metadata', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ url: url })
                });

                console.log('Response received:', response.status);
                const data = await response.json();
                console.log('Response data:', data);
                
                if (!response.ok) {
                    throw new Error(data.error || 'Failed to fetch metadata');
                }

                if (!data.metadata) {
                    throw new Error('Invalid response format');
                }

                const metadata = data.metadata;
                console.log('Processing metadata:', metadata);

                // Helper function to safely set field value
                const setFieldValue = (fieldId, value) => {
                    const field = document.getElementById(fieldId);
                    if (field) {
                        console.log(`Setting ${fieldId} to:`, value);
                        field.value = value || '';
                    } else {
                        console.error(`Could not find field with id ${fieldId}`);
                    }
                };

                // Update form fields with fetched metadata
                setFieldValue('title', metadata.title);
                setFieldValue('description', metadata.description);
                setFieldValue('abstract', metadata.abstract);
                setFieldValue('crs', metadata.crs);

                // Handle spatial extent if available
                if (metadata.spatial_extent && metadata.spatial_extent.coordinates) {
                    console.log('Processing spatial extent:', metadata.spatial_extent);
                    const coords = metadata.spatial_extent.coordinates[0];
                    if (coords && coords.length >= 4) {
                        // Get source CRS from metadata or default to EPSG:4326
                        const sourceCrs = metadata.crs || 'EPSG:4326';
                        console.log('Source CRS:', sourceCrs);

                        // Transform coordinates from source CRS to EPSG:4326
                        const transformedCoords = coords.map(coord => {
                            return ol.proj.transform(
                                coord,
                                sourceCrs,
                                'EPSG:4326'
                            );
                        });

                        console.log('Transformed coordinates:', transformedCoords);

                        // Extract bounds from transformed coordinates
                        const west = transformedCoords[0][0];
                        const south = transformedCoords[0][1];
                        const east = transformedCoords[2][0];
                        const north = transformedCoords[2][1];

                        console.log('Extracted bounds (EPSG:4326):', { west, south, east, north });

                        // Update form fields
                        setFieldValue('westBound', west.toFixed(6));
                        setFieldValue('eastBound', east.toFixed(6));
                        setFieldValue('southBound', south.toFixed(6));
                        setFieldValue('northBound', north.toFixed(6));

                        // Update map
                        updateExtentBox();
                    }
                }

                urlStatus.innerHTML = '<span class="text-green-600">Metadata fetched successfully</span>';
            } catch (error) {
                console.error('Error fetching metadata:', error);
                urlStatus.innerHTML = `<span class="text-red-600">Error: ${error.message}</span>`;
            }
        });
    } else {
        console.error('Could not find fetch metadata button');
    }
});
</script>
{% endblock %} 